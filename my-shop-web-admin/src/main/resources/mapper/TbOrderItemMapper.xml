<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.funtl.my.shop.web.admin.dao.TbOrderItemDao">
  <resultMap id="BaseResultMap" type="com.funtl.my.shop.domain.TbOrderItem">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="movie_id" jdbcType="BIGINT" property="movieId" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="movie_name" jdbcType="VARCHAR" property="movieName" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="total_fee" jdbcType="BIGINT" property="totalFee" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="time" jdbcType="VARCHAR" property="time" />
  </resultMap>
  <sql id="Base_Column_List">
    id, movie_id, order_id, num, movie_name, price, total_fee, username, `time`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_order_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByOrderId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_order_item
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <select id="selectByOrderIdNew" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_order_item
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_order_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.funtl.my.shop.domain.TbOrderItem">
    insert into tb_order_item (id, movie_id, order_id, 
      num, movie_name, price, 
      total_fee, username, `time`
      )
    values (#{id,jdbcType=BIGINT}, #{movieId,jdbcType=BIGINT}, #{orderId,jdbcType=VARCHAR},
      #{num,jdbcType=INTEGER}, #{movieName,jdbcType=VARCHAR}, #{price,jdbcType=BIGINT}, 
      #{totalFee,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.funtl.my.shop.domain.TbOrderItem">
    insert into tb_order_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="movieId != null">
        movie_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="movieName != null">
        movie_name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="totalFee != null">
        total_fee,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="time != null">
        `time`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="movieId != null">
        #{movieId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="movieName != null">
        #{movieName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=BIGINT},
      </if>
      <if test="totalFee != null">
        #{totalFee,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.funtl.my.shop.domain.TbOrderItem">
    update tb_order_item
    <set>
      <if test="movieId != null">
        movie_id = #{movieId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="movieName != null">
        movie_name = #{movieName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="totalFee != null">
        total_fee = #{totalFee,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        `time` = #{time,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.funtl.my.shop.domain.TbOrderItem">
    update tb_order_item
    set movie_id = #{movieId,jdbcType=BIGINT},
      order_id = #{orderId,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      movie_name = #{movieName,jdbcType=VARCHAR},
      price = #{price,jdbcType=BIGINT},
      total_fee = #{totalFee,jdbcType=BIGINT},
      username = #{username,jdbcType=VARCHAR},
      `time` = #{time,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <insert id="insertBatch" parameterType="java.util.List">
    insert into tb_order_item (movie_id, order_id,
    num, movie_name, price,
    total_fee, username, `time`
    ) values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.movieId,jdbcType=BIGINT}, #{item.orderId,jdbcType=VARCHAR},
      #{item.num,jdbcType=INTEGER}, #{item.movieName,jdbcType=VARCHAR}, #{item.price,jdbcType=BIGINT},
      #{item.totalFee,jdbcType=BIGINT}, #{item.username,jdbcType=VARCHAR}, #{item.time,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>
</mapper>